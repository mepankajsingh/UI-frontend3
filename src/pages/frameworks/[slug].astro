---
import Layout from '../../layouts/Layout.astro';
import LibraryCard from '../../components/LibraryCard.astro';
import { supabase } from '../../lib/supabase';

// Change from getStaticPaths to dynamic routes for SSR
const { slug } = Astro.params;

// Fetch framework details
const { data: framework, error: frameworkError } = await supabase
  .from('frameworks')
  .select('*')
  .eq('slug', slug)
  .single();

if (frameworkError || !framework) {
  return Astro.redirect('/404');
}

// Fetch related libraries
const { data: relatedLibraries } = await supabase
  .from('libraries')
  .select('id, name, slug, icon_url, description, github_stars, npm_downloads, pricing')
  .eq('temp_framework_id', framework.id)
  .order('github_stars', { ascending: false });
---

<Layout 
  title={framework.title || framework.name} 
  description={framework.meta_description || framework.description}
>
  <div class="bg-white border border-gray-200 rounded-lg shadow-sm overflow-hidden mb-8">
    <div class="p-6 md:p-8">
      <div class="flex flex-col md:flex-row md:items-center gap-6 mb-6">
        <div class="flex-shrink-0">
          {framework.icon_url ? (
            <img src={framework.icon_url} alt={framework.name} class="w-16 h-16 object-contain" />
          ) : (
            <div class="w-16 h-16 bg-primary-100 text-primary-600 rounded-md flex items-center justify-center">
              <span class="font-bold text-2xl">{framework.name.charAt(0)}</span>
            </div>
          )}
        </div>
        
        <div>
          <h1 class="text-3xl font-bold text-gray-900 mb-2">{framework.title || framework.name}</h1>
          <div class="flex flex-wrap gap-3">
            {framework.type && (
              <span class="text-xs font-medium px-2.5 py-1 rounded-full bg-blue-100 text-blue-800">
                {framework.type}
              </span>
            )}
            {framework.rendering_type && (
              <span class="text-xs font-medium px-2.5 py-1 rounded-full bg-purple-100 text-purple-800">
                {framework.rendering_type}
              </span>
            )}
            {framework.language && (
              <span class="text-xs font-medium px-2.5 py-1 rounded-full bg-green-100 text-green-800">
                {framework.language}
              </span>
            )}
          </div>
        </div>
      </div>
      
      <div class="prose max-w-none mb-8">
        <p class="text-gray-700">{framework.description}</p>
      </div>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
        <div class="bg-gray-50 p-4 rounded-lg">
          <div class="text-sm text-gray-500 mb-1">GitHub Stars</div>
          <div class="font-semibold text-lg">{framework.github_stars?.toLocaleString() || 'N/A'}</div>
        </div>
        <div class="bg-gray-50 p-4 rounded-lg">
          <div class="text-sm text-gray-500 mb-1">NPM Downloads</div>
          <div class="font-semibold text-lg">{framework.npm_downloads?.toLocaleString() || 'N/A'}</div>
        </div>
        <div class="bg-gray-50 p-4 rounded-lg">
          <div class="text-sm text-gray-500 mb-1">Latest Version</div>
          <div class="font-semibold text-lg">{framework.latest_version || 'N/A'}</div>
        </div>
        <div class="bg-gray-50 p-4 rounded-lg">
          <div class="text-sm text-gray-500 mb-1">Last Updated</div>
          <div class="font-semibold text-lg">
            {framework.last_update ? new Date(framework.last_update).toLocaleDateString() : 'N/A'}
          </div>
        </div>
      </div>
      
      <div class="flex flex-wrap gap-3">
        {framework.website_url && (
          <a 
            href={framework.website_url} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center gap-1 px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition-colors"
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0112 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 013 12c0-1.605.42-3.113 1.157-4.418" />
            </svg>
            Website
          </a>
        )}
        
        {framework.github_url && (
          <a 
            href={framework.github_url} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center gap-1 px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-900 transition-colors"
          >
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd"></path>
            </svg>
            GitHub
          </a>
        )}
        
        {framework.npm_url && (
          <a 
            href={framework.npm_url} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center gap-1 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors"
          >
            <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
              <path d="M0 0v24h24V0H0zm12 18.29v-4.17H8.04V6.12h15.92v12.17H12z"/>
            </svg>
            NPM
          </a>
        )}
        
        {framework.docs_url && (
          <a 
            href={framework.docs_url} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center gap-1 px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 transition-colors"
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
            </svg>
            Documentation
          </a>
        )}
      </div>
    </div>
  </div>
  
  {framework.installation_command && (
    <div class="mb-8">
      <h2 class="text-xl font-bold text-gray-900 mb-3">Installation</h2>
      <div class="bg-gray-900 text-white p-4 rounded-lg overflow-x-auto">
        <code class="text-sm font-mono">{framework.installation_command}</code>
      </div>
    </div>
  )}
  
  {relatedLibraries && relatedLibraries.length > 0 && (
    <div class="mb-8">
      <h2 class="text-xl font-bold text-gray-900 mb-4">Related Libraries</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {relatedLibraries.map(library => (
          <LibraryCard library={library} />
        ))}
      </div>
    </div>
  )}
</Layout>
